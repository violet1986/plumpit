// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pitmessage.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	pitmessage.proto

It has these top-level messages:
	SystemCPU
	ProcCPU
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnumPitType int32

const (
	EnumPitType_UNKNOWN       EnumPitType = 0
	EnumPitType_SYSTEM        EnumPitType = 1
	EnumPitType_SYSTEM_CPU    EnumPitType = 2
	EnumPitType_SYSTEM_MEMORY EnumPitType = 3
	EnumPitType_PROC          EnumPitType = 10
	EnumPitType_PROC_CPU      EnumPitType = 11
)

var EnumPitType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "SYSTEM",
	2:  "SYSTEM_CPU",
	3:  "SYSTEM_MEMORY",
	10: "PROC",
	11: "PROC_CPU",
}
var EnumPitType_value = map[string]int32{
	"UNKNOWN":       0,
	"SYSTEM":        1,
	"SYSTEM_CPU":    2,
	"SYSTEM_MEMORY": 3,
	"PROC":          10,
	"PROC_CPU":      11,
}

func (x EnumPitType) String() string {
	return proto.EnumName(EnumPitType_name, int32(x))
}
func (EnumPitType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SystemCPU struct {
	PitType EnumPitType `protobuf:"varint,1,opt,name=pit_type,json=pitType,enum=protos.EnumPitType" json:"pit_type,omitempty"`
	User    uint64      `protobuf:"varint,2,opt,name=user" json:"user,omitempty"`
	Sys     uint64      `protobuf:"varint,3,opt,name=sys" json:"sys,omitempty"`
	Idle    uint64      `protobuf:"varint,4,opt,name=idle" json:"idle,omitempty"`
}

func (m *SystemCPU) Reset()                    { *m = SystemCPU{} }
func (m *SystemCPU) String() string            { return proto.CompactTextString(m) }
func (*SystemCPU) ProtoMessage()               {}
func (*SystemCPU) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SystemCPU) GetPitType() EnumPitType {
	if m != nil {
		return m.PitType
	}
	return EnumPitType_UNKNOWN
}

func (m *SystemCPU) GetUser() uint64 {
	if m != nil {
		return m.User
	}
	return 0
}

func (m *SystemCPU) GetSys() uint64 {
	if m != nil {
		return m.Sys
	}
	return 0
}

func (m *SystemCPU) GetIdle() uint64 {
	if m != nil {
		return m.Idle
	}
	return 0
}

type ProcCPU struct {
	PitType EnumPitType `protobuf:"varint,1,opt,name=pit_type,json=pitType,enum=protos.EnumPitType" json:"pit_type,omitempty"`
	Percent float64     `protobuf:"fixed64,2,opt,name=percent" json:"percent,omitempty"`
}

func (m *ProcCPU) Reset()                    { *m = ProcCPU{} }
func (m *ProcCPU) String() string            { return proto.CompactTextString(m) }
func (*ProcCPU) ProtoMessage()               {}
func (*ProcCPU) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProcCPU) GetPitType() EnumPitType {
	if m != nil {
		return m.PitType
	}
	return EnumPitType_UNKNOWN
}

func (m *ProcCPU) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func init() {
	proto.RegisterType((*SystemCPU)(nil), "protos.SystemCPU")
	proto.RegisterType((*ProcCPU)(nil), "protos.ProcCPU")
	proto.RegisterEnum("protos.EnumPitType", EnumPitType_name, EnumPitType_value)
}

func init() { proto.RegisterFile("pitmessage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xb1, 0x6a, 0xc3, 0x30,
	0x10, 0x86, 0xab, 0xd8, 0xc4, 0xee, 0xb9, 0x0d, 0xea, 0x75, 0xd1, 0x18, 0x32, 0x85, 0x0e, 0x1e,
	0xda, 0x47, 0x30, 0x9e, 0x8a, 0x6d, 0x21, 0xc7, 0x94, 0x4c, 0x21, 0x4d, 0x8f, 0x62, 0xa8, 0x63,
	0x61, 0xc9, 0x83, 0xdf, 0xbe, 0x48, 0x6a, 0xa1, 0x73, 0xa7, 0xfb, 0xfe, 0xe3, 0x3b, 0x7e, 0x38,
	0xe0, 0xba, 0xb7, 0x03, 0x19, 0x73, 0xfe, 0xa4, 0x5c, 0x4f, 0xa3, 0x1d, 0x71, 0xed, 0x87, 0xd9,
	0xcd, 0x70, 0xdb, 0x2e, 0xc6, 0xd2, 0x50, 0xc8, 0x0e, 0x73, 0x48, 0x75, 0x6f, 0x4f, 0x76, 0xd1,
	0x24, 0xd8, 0x96, 0xed, 0x37, 0xcf, 0x8f, 0x41, 0x37, 0x79, 0x79, 0x9d, 0x07, 0xd9, 0xdb, 0xc3,
	0xa2, 0x49, 0x25, 0x3a, 0x00, 0x22, 0xc4, 0xb3, 0xa1, 0x49, 0xac, 0xb6, 0x6c, 0x1f, 0x2b, 0xcf,
	0xc8, 0x21, 0x32, 0x8b, 0x11, 0x91, 0x5f, 0x39, 0x74, 0x56, 0xff, 0xf1, 0x45, 0x22, 0x0e, 0x96,
	0xe3, 0x5d, 0x0b, 0x89, 0x9c, 0xc6, 0xcb, 0x7f, 0x4a, 0x05, 0x24, 0x9a, 0xa6, 0x0b, 0x5d, 0xad,
	0xef, 0x65, 0xea, 0x37, 0x3e, 0x9d, 0x21, 0xfb, 0x73, 0x81, 0x19, 0x24, 0x5d, 0xfd, 0x5a, 0x37,
	0x6f, 0x35, 0xbf, 0x41, 0x80, 0x75, 0x7b, 0x6c, 0x0f, 0x65, 0xc5, 0x19, 0x6e, 0x00, 0x02, 0x9f,
	0x0a, 0xd9, 0xf1, 0x15, 0x3e, 0xc0, 0xfd, 0x4f, 0xae, 0xca, 0xaa, 0x51, 0x47, 0x1e, 0x61, 0x0a,
	0xb1, 0x54, 0x4d, 0xc1, 0x01, 0xef, 0x20, 0x75, 0xe4, 0xd5, 0xec, 0x3d, 0xbc, 0xed, 0xe5, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xb9, 0x9b, 0xcd, 0x8c, 0x51, 0x01, 0x00, 0x00,
}
